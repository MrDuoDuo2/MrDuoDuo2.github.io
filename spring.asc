# Spring 

## What you'll build
You will build a classic “Hello World!” endpoint which any browser can connect to. You can even tell it your name, and it will respond in a more friendly way.

## What you’ll need
An Integrated Developer Environment (IDE)

Popular choices include IntelliJ IDEA, Spring Tools, Visual Studio Code, or Eclipse, and many more.

## A Java™ Development Kit (JDK)

We recommend AdoptOpenJDK version 8 or version 11.

## start a new spring boot project

https://start.spring.io/

## add code
Now change the contents of the file by adding the extra method and annotations shown in the code below

....
package com.github.mrduoduo2.exampleapicore;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@SpringBootApplication
@RestController
public class ExampleApiCoreApplication {

	public static void main(String[] args) {
		SpringApplication.run(ExampleApiCoreApplication.class, args);
	}

	@GetMapping("/hello")
	public String hello(@RequestParam(value = "name", defaultValue = "World") String name) {
		return String.format("Hello %s",name);
	}
}

....

## param
@RequestParam(value = "name", defaultValue = "World") String name

## RestController

The @RestController annotation tells Spring that this code describes an endpoint that should be made available over the web


## try it 

linux

....
./mvnw spring-boot:run
....